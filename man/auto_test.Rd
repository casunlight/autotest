% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto-test.R
\name{auto_test}
\alias{auto_test}
\title{Watches code and tests for changes, rerunning tests as appropriate.}
\usage{
auto_test(code_path, test_path, reporter = default_reporter(),
  env = test_env())
}
\arguments{
\item{code_path}{path to directory containing code}

\item{test_path}{path to directory containing tests}

\item{reporter}{test reporter to use}

\item{env}{environment in which to execute test suite.}
}
\description{
The idea behind `auto_test()` is that you just leave it running while
you develop your code.  Everytime you save a file it will be automatically
tested and you can easily see if your changes have caused any test
 failures.
}
\details{
The current strategy for rerunning tests is as follows:

- if any code has changed, then those files are reloaded and all tests
  rerun
- otherwise, each new or modified test is run

In the future, `auto_test()` might implement one of the following more
intelligent alternatives:

- Use codetools to build up dependency tree and then rerun tests only
  when a dependency changes.
- Mimic ruby's autotest and rerun only failing tests until they pass,
  and then rerun all tests.
}
\seealso{
[auto_test_package()]
}
\keyword{debugging}

